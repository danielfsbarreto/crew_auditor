---
fetch_crew_content:
  description: >
    Fetch and read the codebase from the provided GitHub repository URL:{github_repo}.
  expected_output: >
    The code from {github_repo} is successfully fetched and available for analysis.
    Emphasize searching for the following types of files in the codebase:
    - Python files
    - Markdown files
    - YAML files
    Outline if the codebase was fetched successfully or not. In case of success, summarize the contente fetched.
  agent: crewai_expert

fetch_crewai_docs:
  description: Fetch up-to-date documentation of CrewAI (http://docs.crewai.com/).
  expected_output: >
    All latest information regarding CrewAI's docs is successfully fetched and available to serve
    as knowledge baseline for the evaluation of {github_repo}.
    Outline if the docs were fetched successfully or not. In case of success, summarize the content fetched.
  agent: crewai_expert

fetch_crewai_source_code:
  description: Fetch the latest info about CrewAI open-source framework (https://github.com/crewAIInc/crewai).
  expected_output: >
    The code of CrewAI's open-source framework is successfully fetched and available to serve as knowledge baseline for the evaluation of {github_repo}.
    Emphasize searching for the following types of files in the codebase:
    - Python files
    - Markdown files
    - YAML files
    Outline if the source code was fetched successfully or not. In case of success, summarize the content fetched.
  agent: crewai_expert

evaluate_crew:
  description: >
    Analyze the crew code from the fetched content of {github_repo}.
    Use all of your knowledge of CrewAI to provide a detailed analysis of the code, highlighting strengths and areas for improvement.
    Make the analysis in a couple of dimensions:
    - Readability
    - Maintainability
    - Reliability
    - Documentation
    - Testability
  expected_output: >
    A detailed analysis of the crew's code, highlighting strengths and areas for improvement.
    Be extra careful to not make false assumptions about the codebase.
    Always pick real examples found in the code while highlighting deficiencies, as well as how that specific deficiency could be improved.
  context:
  - fetch_crew_content
  - fetch_crewai_docs
  - fetch_crewai_source_code
  agent: crewai_expert

calculate_quality_score:
  description: Based on the evaluation, calculate a quality score for the repository
    at {github_repo} from 0 to 100.
  expected_output: >
    A quality score representing the code's adherence to best practices and overall quality.
    Each dimension should be attributed the weight.
    The final score should be the sum of the weights of each dimension.
  context:
  - evaluate_crew
  agent: crewai_expert

generate_detailed_report:
  description: Compile the findings, improvement suggestions, and the quality score
    into a detailed report for {github_repo}.
  expected_output: >
    A comprehensive report with a quality score and actionable improvement suggestions for {github_repo}.
    Start the report outlining the quality scores, both general and split by dimension.
    On each dimension, outline concrete aspects of the analyzed crew were good, as well as areas for improvement.
    Always refer back to the codebase while highlighting deficiencies, as well as how that specific deficiency could be improved.
  context:
  - evaluate_crew
  - calculate_quality_score
  agent: report_generator
